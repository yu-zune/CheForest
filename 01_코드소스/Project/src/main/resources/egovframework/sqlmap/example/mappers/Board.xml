<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
   namespace="egovframework.example.board.service.impl.BoardMapper">
 <!-- 게시글 목록 조회 (닉네임 포함, 카테고리/키워드 조건) -->
<select id="selectBoardList" parameterType="Criteria" resultType="BoardVO">
  SELECT 
    b.*, 
    m.nickname,
    NVL(b.LIKE_COUNT, 0) AS likeCount
  FROM BOARD b
  LEFT JOIN MEMBER m ON b.writer_idx = m.member_idx
  WHERE 1=1
  <if test="searchKeyword != null and searchKeyword != ''">
    AND b.TITLE LIKE '%' || #{searchKeyword} || '%'
  </if>
  <if test="category != null and category != ''">
    AND b.CATEGORY = #{category}
  </if>
  ORDER BY b.BOARD_ID DESC
  OFFSET #{firstIndex} ROWS
  FETCH NEXT #{pageUnit} ROWS ONLY
</select>

  <!-- 게시글 총 개수 (검색/카테고리 포함) -->
  <select id="selectBoardListTotCnt" parameterType="Criteria" resultType="int">
    SELECT COUNT(*)
    FROM BOARD
    WHERE 1=1
    <if test="searchKeyword != null and searchKeyword != ''">
      AND TITLE LIKE '%' || #{searchKeyword} || '%'
    </if>
    <if test="category != null and category != ''">
      AND CATEGORY = #{category}
    </if>
  </select>

  <!-- 게시글 등록 -->
  <insert id="insert" parameterType="BoardVO">
    <selectKey keyProperty="boardId" resultType="int" order="BEFORE">
      SELECT BOARD_SEQ.NEXTVAL FROM DUAL
    </selectKey>
    INSERT INTO BOARD (
      BOARD_ID, CATEGORY, TITLE, PREPARE, CONTENT,
      THUMBNAIL, WRITE_DATE, VIEW_COUNT, WRITER_IDX
    ) VALUES (
      #{boardId}, #{category}, #{title}, #{prepare}, #{content},
      #{thumbnail}, SYSDATE, #{viewCount}, #{writerIdx}
    )
  </insert>

  <!-- 게시글 단건 조회 -->
  <select id="selectBoard" parameterType="int" resultType="BoardVO">
    SELECT * FROM BOARD WHERE BOARD_ID = #{boardId}
  </select>

  <!-- 게시글 수정 -->
  <update id="update" parameterType="BoardVO">
    UPDATE BOARD
    SET CATEGORY = #{category},
        TITLE = #{title},
        PREPARE = #{prepare},
        CONTENT = #{content},
        THUMBNAIL = #{thumbnail}
    WHERE BOARD_ID = #{boardId}
  </update>

  <!-- 게시글 삭제 -->
  <delete id="delete" parameterType="BoardVO">
    DELETE FROM BOARD WHERE BOARD_ID = #{boardId}
  </delete>

  <!-- 게시글 댓글 전체 삭제 -->
  <delete id="deleteAllReviewsByBoardId" parameterType="int">
    DELETE FROM BOARD_REVIEW WHERE BOARD_ID = #{boardId}
  </delete>

  <!-- 조회수 증가 -->
  <update id="increaseViewCount" parameterType="int">
    UPDATE BOARD
    SET VIEW_COUNT = VIEW_COUNT + 1
    WHERE BOARD_ID = #{boardId}
  </update>

  <!-- 게시글 상세 조회 (닉네임, 좋아요 수 포함) -->
<select id="selectBoardDetail" parameterType="int" resultType="BoardVO">
  SELECT 
    B.*, 
    M.NICKNAME,
    NVL(B.LIKE_COUNT, 0) AS likeCount
  FROM BOARD B
  LEFT JOIN MEMBER M ON B.WRITER_IDX = M.MEMBER_IDX
  WHERE B.BOARD_ID = #{boardId}
</select>

  <!-- 댓글 목록 -->
<select id="selectReviewList" parameterType="int" resultType="egovframework.example.board.service.ReviewVO">
  SELECT R.*, M.NICKNAME
  FROM BOARD_REVIEW R
  LEFT JOIN MEMBER M ON R.WRITER_IDX = M.MEMBER_IDX
  WHERE R.BOARD_ID = #{boardId}
  ORDER BY R.REVIEW_ID DESC
</select>

  <!-- 댓글 등록 -->
  <insert id="insertReview" parameterType="egovframework.example.board.service.ReviewVO">
    <selectKey keyProperty="reviewId" resultType="int" order="BEFORE">
      SELECT BOARD_REVIEW_SEQ.NEXTVAL FROM DUAL
    </selectKey>
    INSERT INTO BOARD_REVIEW(REVIEW_ID, BOARD_ID, WRITER_IDX, CONTENT, WRITE_DATE)
    VALUES(#{reviewId}, #{boardId}, #{writerIdx}, #{content}, SYSDATE)
  </insert>

  <!-- 댓글 수정 -->
  <update id="editReview">
    UPDATE BOARD_REVIEW
    SET CONTENT = #{content}
    WHERE REVIEW_ID = #{reviewId} AND WRITER_IDX = #{memberIdx}
  </update>

  <!-- 댓글 삭제 -->
  <delete id="deleteReview">
    DELETE FROM BOARD_REVIEW
    WHERE REVIEW_ID = #{reviewId} AND WRITER_IDX = #{memberIdx}
  </delete>

  <!-- 인기 게시글 TOP 4 -->
  <select id="selectBestPosts" resultType="egovframework.example.board.service.BoardVO">
    SELECT B.*, NVL(L.LIKE_CNT, 0) AS LIKE_CNT
    FROM BOARD B
    LEFT JOIN (
      SELECT BOARD_ID, COUNT(*) AS LIKE_CNT
      FROM BOARD_LIKE
      GROUP BY BOARD_ID
    ) L ON B.BOARD_ID = L.BOARD_ID
    ORDER BY LIKE_CNT DESC, B.BOARD_ID DESC
    FETCH FIRST 4 ROWS ONLY
  </select>

  <!-- 카테고리별 인기 게시글 TOP 4 -->
  <select id="selectBestPostsByCategory" parameterType="string" resultType="egovframework.example.board.service.BoardVO">
    SELECT B.*, NVL(L.LIKE_CNT, 0) AS LIKE_CNT
    FROM BOARD B
    LEFT JOIN (
      SELECT BOARD_ID, COUNT(*) AS LIKE_CNT
      FROM BOARD_LIKE
      GROUP BY BOARD_ID
    ) L ON B.BOARD_ID = L.BOARD_ID
    WHERE B.CATEGORY = #{category}
    ORDER BY LIKE_CNT DESC, B.BOARD_ID DESC
    FETCH FIRST 4 ROWS ONLY
  </select>

  <!-- 썸네일 경로 업데이트 -->
  <update id="updateThumbnail" parameterType="BoardVO">
    UPDATE BOARD SET THUMBNAIL = #{thumbnail} WHERE BOARD_ID = #{boardId}
  </update>
  
	<!-- 관리자용 강제 게시글 삭제 -->
	<delete id="adminDeleteBoard" parameterType="int">
	  DELETE FROM BOARD WHERE BOARD_ID = #{boardId}
	</delete>
	
	<!-- 맴버넘버로 서치 -->
	<select id="selectByMemberIdx" parameterType="long" resultType="egovframework.example.board.service.BoardVO">
    SELECT * FROM BOARD WHERE MEMBER_IDX = #{memberIdx}
</select>
</mapper>
